name: Deploy via SCP and SSH (Manual)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Install PHP dependencies
        run: |
          composer install --no-dev --optimize-autoloader

      - name: Install Node.js dependencies
        run: |
          npm install

      - name: Build assets
        run: |
          npm run build

      - name: Copy project to server (excluding unnecessary files)
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_ed25519" \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='vendor' \
            --exclude='.env' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deploy/careerid

      - name: Run remote deployment commands
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ~/deploy/careerid

            # Create .env file if it doesn't exist
            if [ ! -f ".env" ]; then
              echo "APP_ENV=production" > .env
              echo "APP_KEY=" >> .env
              echo "APP_DEBUG=false" >> .env
              echo "LOG_CHANNEL=stack" >> .env
              echo ".env file created"
            else
              echo ".env already exists"
            fi

            # Install PHP dependencies (remote)
            composer install --no-dev --optimize-autoloader

            # Fix permissions
            chmod -R ug+rwx storage bootstrap/cache

            # Run Laravel migrations
            php artisan migrate --force

            echo "Deployment complete."
          EOF
